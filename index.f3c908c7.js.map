{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAgB,SAAS,aAAa,CAAC,eACvC,EAAmB,SAAS,aAAa,CAAC,eAC1C,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAU,EAAM,IAAI,CAE1B,SAAS,IACP,EAAc,QAAQ,CAAG,EAAQ,MAAM,EAAI,GAC3C,EAAiB,QAAQ,CAAG,EAAQ,MAAM,EAAI,EAE9C,IAAM,EAAW,CAAO,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAExC,CAAA,EAAa,QAAQ,CAAG,GAAY,GACpC,EAAgB,QAAQ,CAAG,GAAY,CACzC,CAEA,EAAc,gBAAgB,CAAC,QAAS,WACtC,IAAI,CAAA,EAAQ,MAAM,EAAI,EAAA,GAItB,IAAM,EAAS,CAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAEpC,EAAM,WAAW,CAAC,GAClB,IACF,GAEA,EAAiB,gBAAgB,CAAC,QAAS,WACrC,EAAQ,MAAM,EAAI,IAItB,EAAM,SAAS,CAAC,GAChB,IACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,IAAI,CAAA,CAAO,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,EAAA,GAI1B,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAsB,CAAtB,IAAM,EAAN,EAAA,KAAA,CACG,EAAQ,EAAI,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAErC,EAAI,WAAW,CAAC,EAClB,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAKL,IACF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAI,CAAA,CAAO,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,CAAA,GAI1B,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,E,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,IACF,GAEA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field\");\nvar buttonAddRows = document.querySelector(\".append-row\");\nvar buttonRemoveRows = document.querySelector(\".remove-row\");\nvar buttonAddCol = document.querySelector(\".append-column\");\nvar buttonRemoveCol = document.querySelector(\".remove-column\");\nvar allRows = table.rows;\nfunction updateButtons() {\n    buttonAddRows.disabled = allRows.length >= 10;\n    buttonRemoveRows.disabled = allRows.length <= 2;\n    var colCount = allRows[0].cells.length;\n    buttonAddCol.disabled = colCount >= 10;\n    buttonRemoveCol.disabled = colCount <= 2;\n}\nbuttonAddRows.addEventListener(\"click\", function() {\n    if (allRows.length >= 10) return;\n    var newRow = allRows[0].cloneNode(true);\n    table.appendChild(newRow);\n    updateButtons();\n});\nbuttonRemoveRows.addEventListener(\"click\", function() {\n    if (allRows.length <= 2) return;\n    table.deleteRow(0);\n    updateButtons();\n});\nbuttonAddCol.addEventListener(\"click\", function() {\n    if (allRows[0].cells.length >= 10) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            var newTd = row.cells[0].cloneNode(true);\n            row.appendChild(newTd);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    updateButtons();\n});\nbuttonRemoveCol.addEventListener(\"click\", function() {\n    if (allRows[0].cells.length <= 2) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.deleteCell(0);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    updateButtons();\n});\nupdateButtons();\n\n//# sourceMappingURL=index.f3c908c7.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\nconst buttonAddRows = document.querySelector('.append-row');\nconst buttonRemoveRows = document.querySelector('.remove-row');\nconst buttonAddCol = document.querySelector('.append-column');\nconst buttonRemoveCol = document.querySelector('.remove-column');\nconst allRows = table.rows;\n\nfunction updateButtons() {\n  buttonAddRows.disabled = allRows.length >= 10;\n  buttonRemoveRows.disabled = allRows.length <= 2;\n\n  const colCount = allRows[0].cells.length;\n\n  buttonAddCol.disabled = colCount >= 10;\n  buttonRemoveCol.disabled = colCount <= 2;\n}\n\nbuttonAddRows.addEventListener('click', function () {\n  if (allRows.length >= 10) {\n    return;\n  }\n\n  const newRow = allRows[0].cloneNode(true);\n\n  table.appendChild(newRow);\n  updateButtons();\n});\n\nbuttonRemoveRows.addEventListener('click', function () {\n  if (allRows.length <= 2) {\n    return;\n  }\n\n  table.deleteRow(0);\n  updateButtons();\n});\n\nbuttonAddCol.addEventListener('click', function () {\n  if (allRows[0].cells.length >= 10) {\n    return;\n  }\n\n  for (const row of allRows) {\n    const newTd = row.cells[0].cloneNode(true);\n\n    row.appendChild(newTd);\n  }\n  updateButtons();\n});\n\nbuttonRemoveCol.addEventListener('click', function () {\n  if (allRows[0].cells.length <= 2) {\n    return;\n  }\n\n  for (const row of allRows) {\n    row.deleteCell(0);\n  }\n  updateButtons();\n});\n\nupdateButtons();\n"],"names":["table","document","querySelector","buttonAddRows","buttonRemoveRows","buttonAddCol","buttonRemoveCol","allRows","rows","updateButtons","disabled","length","colCount","cells","addEventListener","newRow","cloneNode","appendChild","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","newTd","err","return","deleteCell"],"version":3,"file":"index.f3c908c7.js.map"}